{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyHandler","event","setState","key","document","addEventListener","this","removeEventListener","className","length","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEMA,E,4MACJC,MAAQ,CACNC,WAAY,I,EAWdC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,WAAYE,EAAME,O,uDATpC,WACEC,SAASC,iBAAiB,QAASC,KAAKN,c,kCAG1C,WACEI,SAASG,oBAAoB,QAASD,KAAKN,c,oBAO7C,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAC0B,IAAtBT,EAAWU,OAAX,mCAC8BV,EAD9B,KAEE,kC,GAzBIW,IAAMC,WAgCTd,I,MC5Bfe,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.c8bb7303.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyHandler);\n  }\n\n  keyHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { pressedKey.length !== 0\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet' }\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n// import { App } from './App';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}